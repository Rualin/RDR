@startuml
'https://plantuml.com/component-diagram

!theme mono

!define C_WIP brown
!define C_FUT slategray
!define C_OPT darkgrey

skinparam {
  linetype ortho
}

<style>
' in progress
.i{
  lineColor C_WIP
  fontColor C_WIP
}
' future releases
.f{
  lineColor C_FUT
  fontColor C_FUT
}
</style>

hide stereotype

header

  | project:  | RDR                       |
  | version:  | 0.2.0                     |
  | date:     | 2025.03.31                |
  | updated:  | %date("yyyy.MM.dd HH:mm") |

end header

title

  Doctor Documents Recognizer Architecture

end title

folder "Demonstrator" as dem {

  storage fs {
  
    folder inp [
      inp
      --
      Input Images
      |_ pdf
      |_ jpg
    ]
    
    folder out [
      out
      --
      |_ json
    ]
  
  }
  
  
  package "fnt\n----\nFront-End" as GUI {
      component in_field [
        in_field
        --
        Input Loader
        --
        Loads supported
        files to be later
        sent to the backend
        --
        format
        |_ pdf
        |_ jpg
      ]
      
      component button [
        button
        --
        is_pressed
        |_ True
          |_api_call
        |_ False
          |_await
      ]
      
      component out_field [
        out_field
        --
        Output text field
        --
        Shows OCR work 
        result (text)
        --
        format
        |_ json => text
      ]
    
  }
    
  package "bck\n----\nBack-End" as prd {
  
    component nrm <<f>> [
      nrm
      --
      Normalizer
      --
      Converts supported 
      input formats
      to JPEG
    ]
    
    component pre [
      pre
      --
      Preprocessor
    ]
    
    component ocr [
      ocr
    ]
    
    package nlp {
    
      component spt [
        spt
        --
        Splitter
      ]
      
      component llm
      
      file pmt [
        pmt
        --
        Prompt Set
      ]
    
    }
    
    component vld <<f>> [
      vld
      --
      Validator
    ]
    
    file shm [
      shm
      --
      JSON Schema
    ]
    
    storage stg [
      stg
      --
      File Storage
      |_ jpg
      |_ ocr-out  txt (non-structured)
    ]
    
    component api_manager [
      api_manager
      --
      Makes connection to 
      model api, processes
      file exchange
    ]
    
    component ppl [
      ppl
      --
      Pipeline
    ]
    
    api_manager -- ppl
    
    ppl -- pre : 2
    ppl -- nrm : 4
    ppl -- ocr : 6
    ppl -- nlp : 8
    ppl -r- vld <<f>> : 10
    
    stg -- ppl : 3, 5, 7, 9
    
    vld -u- shm <<f>>
  
  }

}

button <---> api_manager
in_field ---> api_manager
api_manager ---> out_field  

package "dev\n----\nDev Dependencies" as dev {

  package bmk_ocr [
    bmk_ocr
    --
    Benchmark OCR
    |_ test set
      |_ cases:
        |_ inp
        |_ expected
    |_ runner
    |_ metric set
    |_ dashboard
  ]
  
  package bmk_nlp [
    bmk_nlp
    --
    Benchmark NLP
    |_ test set
      |_ cases:
        |_ inp
        |_ expected
    |_ runner
    |_ metric set
    |_ dashboard
  ]
  

}  

ppl -l--> inp : 1
ppl -r-> out : 9


@enduml
